[tool.poetry]
name = "pytest_tagging"
version = "1.5.2"
description = "a pytest plugin to tag tests"
authors = ["Sergio Castillo <s.cast.lara@gmail.com>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/scastlara/pytest-tagging"
repository = "https://github.com/scastlara/pytest-tagging"


[tool.poetry.dependencies]
python = "^3.8"
pytest = "^7.1.3"

[tool.poetry.dev-dependencies]
black = "*"
mypy = "*"
pytest-parallel = "*"
pytest-cov = "*"
ruff = "*"

[tool.poetry.group.dev.dependencies]
py = "^1.11.0"

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
    "C9",  # mccabe
    "E",   # pycodestyle error
    "W",   # pycodestyle warning
    "F",   # pyflakes
    "B",   # bugbear
    "I",   # isort
    "C4",  # comprehensions
    "SIM", # simplify
    "N",   # pep8-naming
]
ignore = [
    "E501", # line length (black handles it)
]

[tool.pytest.ini_options]
addopts = """
    -p no:tagging
    --cov
    --cov-report term-missing
    --cov-report=xml:./tests/coverage.xml
    --junitxml=./tests/junit.xml
"""

[tool.coverage.run]
omit = ["tests/*", "/tmp/*"]

[tool.coverage.report]
source = "pytest_tagging"
fail_under = 90
exclude_lines = ["if TYPE_CHECKING:", "pragma: no cover"]

[tool.commitizen]
version = "1.5.2"
version_files = ["pyproject.toml:version"]
tag_format = "v$version"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.plugins.pytest11]
pytest_tagging = "pytest_tagging.plugin"
